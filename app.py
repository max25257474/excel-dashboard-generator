import streamlit as st
import pandas as pd
import io
import zipfile
import os
from PIL import Image
from openpyxl import load_workbook
from openpyxl.drawing.image import Image as XLImage

st.set_page_config(page_title="–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–ª—ñ—î–Ω—Ç—Å—å–∫–∏—Ö —Ñ–∞–π–ª—ñ–≤", layout="wide")
st.title("üìÅ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏—Ö Excel-—Ñ–∞–π–ª—ñ–≤ –∫–ª—ñ—î–Ω—Ç—ñ–≤")


st.sidebar.header("üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö")

uploaded_file = st.sidebar.file_uploader("–ó–∞–≤–∞–Ω—Ç–∞–∂ —Å–≤—ñ–π Excel-—Ñ–∞–π–ª", type=["xlsx", "xls"])
logo_file = st.sidebar.file_uploader("–ó–∞–≤–∞–Ω—Ç–∞–∂ –ª–æ–≥–æ—Ç–∏–ø (PNG –∞–±–æ JPG)", type=["png", "jpg", "jpeg"])

default_excel = "clients_large.xlsx"
default_logo = "logo.png"

if uploaded_file is not None:
    df = pd.read_excel(uploaded_file)
    st.success("‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –≤–ª–∞—Å–Ω–∏–π Excel-—Ñ–∞–π–ª.")
elif os.path.exists(default_excel):
    df = pd.read_excel(default_excel)
    st.success("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ clients_large.xlsx —ñ–∑ –ª–æ–∫–∞–ª—å–Ω–æ—ó –ø–∞–ø–∫–∏.")
else:
    st.error("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ clients_large.xlsx. –ó–∞–≤–∞–Ω—Ç–∞–∂ —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É.")
    st.stop()

if logo_file is not None:
    logo_path = "user_logo.png"
    with open(logo_path, "wb") as f:
        f.write(logo_file.read())
    st.sidebar.image(logo_path, caption="–í–∞—à –ª–æ–≥–æ—Ç–∏–ø", use_container_width=True)
elif os.path.exists(default_logo):
    logo_path = default_logo
    st.sidebar.image(logo_path, caption="–õ–æ–≥–æ—Ç–∏–ø –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º", use_container_width=True)
else:
    logo_path = None
    st.sidebar.warning("‚ö†Ô∏è –õ–æ–≥–æ—Ç–∏–ø –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚Äî —Ñ–∞–π–ª–∏ –±—É–¥—É—Ç—å –±–µ–∑ –ª–æ–≥–æ—Ç–∏–ø—É.")

st.subheader("üîç –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ –¥–∞–Ω–∏—Ö")
st.dataframe(df.head(10), use_container_width=True)

columns = df.columns.tolist()
client_column = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –∫–æ–ª–æ–Ω–∫—É –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏:", columns)

if st.button("üöÄ –°—Ç–≤–æ—Ä–∏—Ç–∏ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ —Ñ–∞–π–ª–∏"):
    clients = df[client_column].dropna().unique()
    st.info(f"–°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª–∏ –¥–ª—è {len(clients)} –∫–ª—ñ—î–Ω—Ç—ñ–≤...")

    zip_buffer = io.BytesIO()

    with zipfile.ZipFile(zip_buffer, "w", zipfile.ZIP_DEFLATED) as zipf:
        for client in clients:
            client_data = df[df[client_column] == client]

            temp_output = io.BytesIO()
            client_data.to_excel(temp_output, index=False)
            temp_output.seek(0)

            wb = load_workbook(temp_output)
            ws = wb.active

            if logo_path is not None and os.path.exists(logo_path):
                img = XLImage(logo_path)
                ws.add_image(img, "A1")

            client_output = io.BytesIO()
            wb.save(client_output)
            client_output.seek(0)


            filename = f"{client}.xlsx".replace("/", "_")
            zipf.writestr(filename, client_output.read())

    zip_buffer.seek(0)
    st.success("‚úÖ –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ —Ñ–∞–π–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ!")

    st.download_button(
        label="‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤—Å—ñ —Ñ–∞–π–ª–∏ (.zip)",
        data=zip_buffer,
        file_name="clients_files.zip",
        mime="application/zip"
    )
